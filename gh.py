import telebot
from telebot import types
from bak import createmas, create_variant, User
from inf import spare_mas, users

bot = telebot.TeleBot('6775360728:AAE9zNChL9RIIR6qW74uVSYnYJ_MMgFIMT4')


@bot.message_handler(commands=['stop'])
def stop(message):
    a = telebot.types.ReplyKeyboardRemove()
    if users[message.chat.id].count == 0:
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ /practice, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É\n'
                                          f'–í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ –±–æ—Ç', reply_markup=a)
    else:
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ /practice, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É\n'
                                          f'–í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ –±–æ—Ç\n'
                                          f'–≤—ã —Ä–µ—à–∏–ª–∏ {users[message.chat.id].count} –ø–æ–¥—Ä—è–¥', reply_markup=a)
        users[message.chat.id].count = 0


@bot.message_handler(commands=['new_practice_menu'])
def new_function(message):
    a = telebot.types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, f'–≠—Ç–æ –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏! –ó–¥–µ—Å—å –¥–∞–µ—Ç—Å—è –≤—ã–±–æ—Ä –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ —Å —Ä–∞–∑–Ω—ã–º —É–¥–∞—Ä–µ–Ω–∏–µ–º\n'
                                      f'–î–ª—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ /statistics_new'
                                      f'–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ /new_practice', reply_markup=a)

@bot.message_handler(commands=['new_practice'])
def new_practice(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)


@bot.message_handler(commands=['statistics'])
def statistic(message):
    a = telebot.types.ReplyKeyboardRemove()
    count_games = users[message.chat.id].count_games
    wrong_answers = users[message.chat.id].wrong_choise
    right_answers = users[message.chat.id].right_choise
    record = users[message.chat.id].record
    bot.send_message(message.chat.id, f'–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n'
                                      f'–í—Å–µ–≥–æ –±—ã–ª–æ {count_games} –≤–æ–ø—Ä–æ—Å–æ–≤ü§©\n\n'
                                      f'–í–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ {right_answers} –≤–æ–ø—Ä–æ—Å–æ–≤\n\n'
                                      f'–ù–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ {wrong_answers} –≤–æ–ø—Ä–æ—Å–æ–≤\n\n'
                                      f'–í–∞—à —Ä–µ–∫–æ—Ä–¥ {record}', reply_markup=a)


@bot.message_handler(commands=['start'])
def start(message):
    if users.get(message.chat.id) is None:
        users[message.chat.id] = User(message.chat.id, message.from_user.first_name)
    bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ /practice, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É\n'
                                      f'–í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ –±–æ—Ç')


@bot.message_handler(commands=['practice'])
def questoin(message):
    words = create_variant()
    users[message.chat.id].new_variants(words)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton(words[0])
    btn2 = types.KeyboardButton(words[1])
    btn3 = types.KeyboardButton(words[2])
    btn4 = types.KeyboardButton(words[3])
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–≤–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —É–¥–∞—Ä–µ–Ω–∏–µ–º:', reply_markup=markup)


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, f'–≠—Ç–æ –±–æ—Ç –¥–ª—è —É–¥–∞—á–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ 4 –∑–∞–¥–∞–Ω–∏—é –ï–ì–≠üí© –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É\n\n'
                                      f'/practice - –ù–∞—á–∞–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
                                      f'/stop - –ü—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
                                      f'/statistics - –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üôà')


@bot.message_handler(content_types=['text'])
def on_click(message):
    users[message.chat.id].print_words()
    b = users[message.chat.id].now_variants
    if message.text in b:
        users[message.chat.id].count_games += 1
        if message.text in spare_mas:
            users[message.chat.id].right_choise += 1
            users[message.chat.id].count += 1
            bot.send_message(message.chat.id, f'‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ /stop.\n'
                                              f'–°–µ–π—á–∞—Å –≤—ã —Ä–µ—à–∏–ª–∏ {users[message.chat.id].count} –ø–æ–¥—Ä—è–¥')
            users[message.chat.id].new_variants([])
            questoin(message)
        else:
            users[message.chat.id].wrong_choise += 1
            a = telebot.types.ReplyKeyboardRemove()
            if users[message.chat.id].record < users[message.chat.id].count:
                users[message.chat.id].record = users[message.chat.id].count
            users[message.chat.id].new_variants([])
            bot.send_message(message.chat.id, f'‚ùå–ù–µ–≤–µ—Ä–Ω–æ! –í–∞—à —Å—á–µ—Ç: {users[message.chat.id].count}\n'
                                              f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ!\n'
                                              f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=a)
            users[message.chat.id].count = 0
            questoin(message)
    else:
        a = telebot.types.ReplyKeyboardRemove()
        users[message.chat.id].count = 0
        users[message.chat.id].new_variants([])
        bot.send_message(message.chat.id,
                         '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –≤–≤–µ–¥–∏—Ç–µ /practice',
                         reply_markup=a)


bot.polling(non_stop=True)
